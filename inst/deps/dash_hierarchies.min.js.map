{"version":3,"file":"dash_hierarchies.min.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///external window \"React\"","webpack:///external window \"PropTypes\"","webpack:///./src/lib/components/SimpleHierarchy.react.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","var getCurrentScript = function() {\n    var script = document.currentScript;\n    if (!script) {\n        /* Shim for IE11 and below */\n        /* Do not take into account async scripts and inline scripts */\n\n        var doc_scripts = document.getElementsByTagName('script');\n        var scripts = [];\n\n        for (var i = 0; i < doc_scripts.length; i++) {\n            scripts.push(doc_scripts[i]);\n        }\n\n        scripts = scripts.filter(function(s) { return !s.async && !s.text && !s.textContent; });\n        script = scripts.slice(-1)[0];\n    }\n\n    return script;\n};\n\nvar isLocalScript = function(script) {\n    return /\\/_dash-component-suites\\//.test(script.src);\n};\n\nObject.defineProperty(__webpack_require__, 'p', {\n    get: (function () {\n        var script = getCurrentScript();\n\n        var url = script.src.split('/').slice(0, -1).join('/') + '/';\n\n        return function() {\n            return url;\n        };\n    })()\n});\n\nif (typeof jsonpScriptSrc !== 'undefined') {\n    var __jsonpScriptSrc__ = jsonpScriptSrc;\n    jsonpScriptSrc = function(chunkId) {\n        var script = getCurrentScript();\n        var isLocal = isLocalScript(script);\n\n        var src = __jsonpScriptSrc__(chunkId);\n\n        if(!isLocal) {\n            return src;\n        }\n\n        var srcFragments = src.split('/');\n        var fileFragments = srcFragments.slice(-1)[0].split('.');\n\n        fileFragments.splice(1, 0, \"v0_0_1m1743302115\");\n        srcFragments.splice(-1, 1, fileFragments.join('.'))\n\n        return srcFragments.join('/');\n    };\n}\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"React\"];","const __WEBPACK_NAMESPACE_OBJECT__ = window[\"PropTypes\"];","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * HierarchicalDataItem - Renders a single item in the hierarchical structure\n * \n * @param {Object} props - Component props\n * @param {Object} props.item - Item data containing name, percentage, and optional children\n * @param {number} props.level - Current nesting level for indentation\n * @param {Object} props.colors - Color configuration for bars\n * @param {React.ReactNode} props.openCaret - Icon to show when item is expanded\n * @param {React.ReactNode} props.closedCaret - Icon to show when item is collapsed\n * @param {Function} props.onRowClick - Callback function when row is clicked\n * @returns {React.ReactNode} - Rendered item with optional children\n */\nconst HierarchicalDataItem = ({ \n  item, \n  level = 0, \n  colors, \n  openCaret, \n  closedCaret,\n  onRowClick\n}) => {\n  // Track expanded/collapsed state\n  const [isExpanded, setIsExpanded] = useState(false);\n  // Track hover state for visual feedback\n  const [isHovered, setIsHovered] = useState(false);\n  \n  // Determine if this item has children\n  const hasChildren = item.children && item.children.length > 0;\n  \n  // Calculate indentation based on nesting level using em instead of px\n  const indentPadding = `${level * 1}em`;\n  \n  // Toggle expanded state\n  const toggleExpand = (e) => {\n    // Stop propagation to prevent row click handler from firing\n    e.stopPropagation();\n    \n    if (hasChildren) {\n      setIsExpanded(!isExpanded);\n    }\n  };\n  \n  // Handle row click\n  const handleRowClick = () => {\n    // Call the parent's click handler and pass the item data\n    if (onRowClick) {\n      onRowClick(item);\n    }\n  };\n\n  return (\n    <div style={{ width: '100%' }}>\n      {/* Item Row */}\n      <div \n        style={{ \n          width: '100%', \n          display: 'flex', \n          alignItems: 'center', \n          marginBottom: '0.25em',\n          padding: '0.5em 0',\n          backgroundColor: isHovered ? '#f9fafb' : 'transparent',\n          borderRadius: '0.25em',\n          cursor: 'pointer'\n        }}\n        onClick={handleRowClick}\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        {/* Indentation and Toggle Button */}\n        <div style={{ \n          display: 'flex', \n          alignItems: 'center', \n          paddingLeft: indentPadding \n        }}>\n          {hasChildren ? (\n            <button \n              onClick={toggleExpand} \n              style={{ \n                marginRight: '0.5em', \n                display: 'flex', \n                alignItems: 'center', \n                justifyContent: 'center',\n                background: 'none',\n                border: 'none',\n                cursor: 'pointer',\n                padding: '0.125em',\n                width: '1.5em'\n              }}\n              aria-expanded={isExpanded}\n              aria-label={isExpanded ? \"Collapse\" : \"Expand\"}\n            >\n              {isExpanded ? openCaret : closedCaret}\n            </button>\n          ) : (\n            <div style={{ marginRight: '0.5em', width: '1.5em' }}></div> // Placeholder for alignment\n          )}\n          \n          {/* Item Name */}\n          <div style={{ \n            flexGrow: 1, \n            fontWeight: 500 \n          }}>\n            {item.name}\n          </div>\n        </div>\n        \n        {/* Percentage Display */}\n        <div style={{ \n          marginLeft: 'auto', \n          color: '#6b7280' \n        }}>\n          {item.percentage}%\n        </div>\n      </div>\n      \n      {/* Progress Bar - Now indented to match the text */}\n      <div style={{ display: 'flex', width: '100%' }}>\n        {/* This div creates the same indentation as the text */}\n        <div style={{ width: indentPadding, flexShrink: 0 }}></div>\n        \n        {/* Caret width equivalent space */}\n        <div style={{ width: '1.5em', flexShrink: 0 }}></div>\n        \n        {/* The actual progress bar */}\n        <div \n          style={{ \n            flex: 1,\n            height: '0.5em', \n            borderRadius: '0.25em', \n            marginBottom: '0.5em', \n            backgroundColor: colors.background \n          }}\n        >\n          <div \n            style={{ \n              height: '100%', \n              borderRadius: '0.25em', \n              width: `${item.percentage}%`, \n              backgroundColor: colors.primary \n            }}\n          ></div>\n        </div>\n      </div>\n      \n      {/* Render Children if Expanded */}\n      {hasChildren && isExpanded && (\n        <div style={{ width: '100%' }}>\n          {item.children.map((child, index) => (\n            <HierarchicalDataItem\n              key={`${child.name}-${index}`}\n              item={child}\n              level={level + 1}\n              colors={colors}\n              openCaret={openCaret}\n              closedCaret={closedCaret}\n              onRowClick={onRowClick} // Pass down the onRowClick prop to children\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n/**\n * SimpleHierarchy - A Dash component for displaying hierarchical data with expandable sections\n * \n * This component displays hierarchical data with collapsible sections, percentage indicators, \n * and progress bars. It is designed to be used as a Dash component.\n *\n * @param {Object} props - Component props\n * @param {string} props.id - The ID used to identify this component in Dash callbacks\n * @param {Array} props.data - Array of data items with name, percentage, and optional children\n * @param {Object} props.colors - Colors for the progress bars\n * @param {string} props.colors.primary - Color for the filled portion of progress bars\n * @param {string} props.colors.background - Color for the unfilled portion of progress bars\n * @param {Object} props.style - Custom styles to apply to the container\n * @param {string} props.className - CSS class names to apply to the container\n * @param {string} props.selectedItem - Name of the currently selected item (for controlled component)\n * @param {Function} props.setProps - Dash callback to update props\n * @returns {React.ReactNode} - Rendered hierarchical data component\n */\nconst SimpleHierarchy = (props) => {\n  const { \n    id,\n    data = [], \n    colors = { primary: \"#7c3aed\", background: \"#e5e7eb\" },\n    style = {},\n    className = '',\n    selectedItem = null,\n    setProps\n  } = props;\n\n  // Define SVG for carets to avoid external dependencies\n  // Now the openCaret points down (was pointing up before)\n  const openCaret = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <path d=\"m6 9 6 6 6-6\"/>\n    </svg>\n  );\n  \n  const closedCaret = (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\">\n      <path d=\"m9 18 6-6-6-6\"/>\n    </svg>\n  );\n\n  // Handle row click\n  const handleRowClick = (item) => {\n    if (setProps) {\n      // Create a copy of the item without the children property\n      const { children, ...itemWithoutChildren } = item;\n      \n      // Update the selectedItem property in Dash with the modified item\n      setProps({ selectedItem: itemWithoutChildren });\n    }\n  };\n\n  return (\n    <div \n      id={id}\n      className={className} \n      style={{\n        width: '100%',\n        padding: '1em',\n        border: '1px solid #e5e7eb',\n        borderRadius: '0.25em',\n        ...style\n      }}\n    >\n      {data.map((item, index) => (\n        <HierarchicalDataItem\n          key={`${item.name}-${index}`}\n          item={item}\n          colors={colors}\n          openCaret={openCaret}\n          closedCaret={closedCaret}\n          onRowClick={handleRowClick}\n        />\n      ))}\n    </div>\n  );\n};\n\n/**\n * PropTypes for the SimpleHierarchy component\n * These define the expected properties and their types for Dash\n */\nSimpleHierarchy.propTypes = {\n  /**\n   * The ID used to identify this component in Dash callbacks.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The hierarchical data to display.\n   * Each item should have a name, percentage, and optional children array.\n   */\n  data: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired,\n    children: PropTypes.array\n  })),\n\n  /**\n   * Colors for the component.\n   */\n  colors: PropTypes.shape({\n    primary: PropTypes.string,\n    background: PropTypes.string\n  }),\n\n  /**\n   * Inline styles to apply to the outer div.\n   */\n  style: PropTypes.object,\n\n  /**\n   * CSS class names to apply to the outer div.\n   */\n  className: PropTypes.string,\n\n  /**\n   * Dash-assigned callback that should be called to report property changes\n   * to Dash, to make them available for callbacks.\n   */\n  setProps: PropTypes.func,\n\n  /**\n   * Object representing the currently selected item (controlled component pattern).\n   * This will be updated when a row is clicked.\n   * Contains all properties of the selected item except the 'children' array.\n   */\n  selectedItem: PropTypes.object\n};\n\n/**\n * Default properties for the SimpleHierarchy component.\n */\nSimpleHierarchy.defaultProps = {\n  data: [],\n  colors: { primary: \"#7c3aed\", background: \"#e5e7eb\" },\n  style: {},\n  selectedItem: null\n};\n\nexport default SimpleHierarchy;"],"names":["url","__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","getCurrentScript","script","document","currentScript","doc_scripts","getElementsByTagName","scripts","i","length","push","filter","s","async","text","textContent","slice","src","split","join","jsonpScriptSrc","__jsonpScriptSrc__","chunkId","isLocal","test","srcFragments","fileFragments","splice","window","HierarchicalDataItem","_ref","item","_ref$level","level","colors","openCaret","closedCaret","onRowClick","_useState2","_slicedToArray","useState","isExpanded","setIsExpanded","_useState4","isHovered","setIsHovered","hasChildren","children","indentPadding","concat","React","style","width","display","alignItems","marginBottom","padding","backgroundColor","borderRadius","cursor","onClick","onMouseEnter","onMouseLeave","paddingLeft","e","stopPropagation","marginRight","justifyContent","background","border","flexGrow","fontWeight","name","marginLeft","color","percentage","flexShrink","flex","height","primary","map","child","index","_HierarchicalDataItem","SimpleHierarchy","props","id","_props$data","data","_props$colors","_props$style","_props$className","className","setProps","selectedItem","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","handleRowClick","itemWithoutChildren","_objectWithoutProperties","_excluded","_objectSpread","propTypes","PropTypes","isRequired","defaultProps"],"sourceRoot":""}